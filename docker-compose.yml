version: '3.9'
services:
  db:
    image: 'soldeveus2gintacr01.azurecr.io/postgres:13'
    ports:
      - '5432:5432'
    volumes:
      - ./data/pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD-postgres}
      - POSTGRES_DB=${POSTGRES_DB-backstage}
      - POSTGRES_HOST_AUTH_METHOD=${POSTGRES_HOST_AUTH_METHOD-trust}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
  app:
    # privileged: true
    build:
      context: .
      dockerfile: ./packages/backend/Dockerfile
    command:
      - 'node'
      - 'packages/backend'
      - '--config'
      - 'app-config.yaml'
      - '--config'
      - 'app-config.docker.yaml'
    ports:
      - '7000:7000'
    volumes:
      - ./data/techdocs:/app/node_modules/@backstage/plugin-techdocs-backend/static
      # - ./data/tmp:/tmp
      # - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=${POSTGRES_PORT-5432}
      - POSTGRES_USER=${POSTGRES_USER-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD-postgres}
      - AZURE_TOKEN=${AZURE_TOKEN}
      - JIRA_TOKEN=${JIRA_TOKEN}
    depends_on:
      db:
        condition: service_healthy
